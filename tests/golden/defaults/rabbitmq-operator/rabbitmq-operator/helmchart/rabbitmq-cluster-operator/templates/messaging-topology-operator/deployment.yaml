apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/instance: rabbitmq-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq-cluster-operator
    app.kubernetes.io/part-of: rabbitmq
    app.kubernetes.io/version: 1.12.1
    helm.sh/chart: rabbitmq-cluster-operator-3.10.5
  name: rabbitmq-operator-rabbitmq-messaging-topology-operator
  namespace: syn-rabbitmq-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: messaging-topology-operator
      app.kubernetes.io/instance: rabbitmq-operator
      app.kubernetes.io/name: rabbitmq-cluster-operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: messaging-topology-operator
        app.kubernetes.io/instance: rabbitmq-operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq-cluster-operator
        app.kubernetes.io/part-of: rabbitmq
        app.kubernetes.io/version: 1.12.1
        helm.sh/chart: rabbitmq-cluster-operator-3.10.5
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: messaging-topology-operator
                    app.kubernetes.io/instance: rabbitmq-operator
                    app.kubernetes.io/name: rabbitmq-cluster-operator
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --metrics-bind-address=:8080
          command:
            - /manager
          env:
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom: null
          image: docker.io/bitnami/rmq-messaging-topology-operator:1.12.1-debian-11-r2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: http-metrics
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: rabbitmq-cluster-operator
          ports:
            - containerPort: 9443
              name: http-webhook
              protocol: TCP
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: http-metrics
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: false
      initContainers: null
      serviceAccountName: rabbitmq-operator-rabbitmq-messaging-topology-operator
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: msg-topology-operator-cert
